
package com.web.vo.price;

import com.web.vo.price.PriceVO;

//规则名称, 一个drl里面的规则名称必须是唯一
rule "rule 1"
//salience为优先级, 数字越大就越优先执行
salience 1
//当规则在推论中对fact进行修改后, 可能会导致该规则的重新激活, 引起递归, 设置no-loop为true可以阻止该规则被再次激活
no-loop true
//在同名activation-group中的规则将以互斥的方式激发, 这个意思时在这个组中第一条
//被激发的规则将取消其它规则的激发, 即使它们已经在激发队列中, Activation-group属性可以是任何字符,
//只要所有你需要放在同一个组中的规则中的activation-group属性是相同的即可
activation-group "find price"


//执行的条件
when
	price : PriceVO( name == "BMW")

//条件达到后执行
then
    System.out.println("rule 1");
    price.setMoney(8.00D);
end

////////////////////////////////////////

rule "rule 2"
salience 2
no-loop true
activation-group "find price"
when
	price : PriceVO( name == "BC")
then
    System.out.println("rule 2");
    price.setMoney(9.00D);
end

////////////////////////////////////////

rule "rule 3"
salience 2
no-loop true
activation-group "find price"
when
	price : PriceVO( name == "AUTO")
then
    System.out.println("rule 3");
    price.setMoney(10.00D);
end