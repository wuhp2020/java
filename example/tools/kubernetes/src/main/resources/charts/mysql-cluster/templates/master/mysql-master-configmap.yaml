apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-master-configmap
data:
  run.sh: |

    #!/bin/bash

    set -x

    echo "starting mysql-master ..."
    mkdir -p /mysql/tmp
    mkdir -p /mysql/conf
    mkdir -p /mysql/data

    groupadd mysql
    useradd -r -g mysql mysql
    groups mysql
    # 必须执行
    chown -R mysql:mysql /mysql

    /mysql/bin/mysqld --defaults-file=/mysql/conf/my.cnf --user=mysql --basedir=/mysql --datadir=/mysql/data --initialize
    # initialize specified but the data directory has files in it

    nohup /mysql/bin/mysqld_safe --defaults-file=/mysql/conf/my.cnf &
    ln -s /mysql/tmp/mysql.sock /tmp/mysql.sock

    response1=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}')
    if [[ $? -ne 0 ]]; then
      p=`cat /mysql/data/mysql.err | grep password | awk -F'root@localhost: ' '{print $2}'`
      while true
      do
      sleep 1
      response2=$(/mysql/bin/mysqladmin -u root -p$p password "{{.Values.password}}")
      if [[ $? -eq 0 ]]; then
        break
      else
        response7=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}' -e"show slave status \G;")
        echo $response7
        if [[ $response7 == *"Slave_IO_Running: Yes"* ]]; then
          if [[ $response7 == *"Slave_SQL_Running: Yes"* ]]; then
            break
          fi
        fi
      fi
      done

      while true
      do
      sleep 1
      response3=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}' -e"update mysql.user set host='%' where user='root';flush privileges;")
      if [[ $? -eq 0 ]]; then
        break
      fi
      done
    fi

    while true; do
      sleep 5
      temp=$(ping mysql-slave-statefulset-0.mysql-slave-service.default.svc.cluster.local -c 1 | head -1 | awk -F\( '{print $2}' | awk -F\) '{print $1}')
      if [[ $temp == *"Name or service not known"* ]]; then
        echo 'service not known == wait'
      else
        while true
        do
        sleep 5
        response4=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}' -e"CHANGE MASTER TO MASTER_HOST='$temp',MASTER_USER='root',MASTER_PASSWORD='{{.Values.password}}',MASTER_LOG_FILE='mysql-bin.000001',MASTER_LOG_POS=0;")
        response5=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}' -e"START SLAVE;")
        response6=$(/mysql/bin/mysql -uroot -p'{{.Values.password}}' -e"show slave status \G;")
        echo $response6
        if [[ $response6 == *"Slave_IO_Running: Yes"* ]]; then
          if [[ $response6 == *"Slave_SQL_Running: Yes"* ]]; then
            break
          fi
        fi
        done
        break
      fi
    done

    echo "started mysql-master ..."
    tail -f /dev/null

  my.cnf: |

    [mysqld]
    log-bin=mysql-bin
    server-id=1
    bind-address=0.0.0.0
    port={{.Values.mysql_master.port}}
    basedir=/mysql
    datadir=/mysql/data
    socket=/mysql/tmp/mysql.sock
    log-error=/mysql/data/mysql.err
    pid-file=/mysql/data/mysql.pid
    binlog-ignore-db=mysql
    binlog_ignore_db=information_schema
    binlog_ignore_db=performation_schema
    binlog_ignore_db=sys
    binlog_format=MIXED

    character_set_server=utf8mb4
    symbolic-links=0
    explicit_defaults_for_timestamp=true

