apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-mongos-statefulset
  labels:
    app: "mongodb-mongos"
    release: "{{ .Release.Name }}"
spec:
  serviceName: "mongodb-mongos-service"
  replicas: {{ .Values.mongodb_mongos.replicas | default 1 }}
  selector:
    matchLabels:
      app: "mongodb-mongos"
      release: "{{ .Release.Name }}"
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "mongodb-mongos"
        release: "{{ .Release.Name }}"
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      restartPolicy: Always
      {{- if .Values.mongodb_mongos.affinity }}
      affinity:
      {{ tpl .Values.mongodb_mongos.affinity . | indent 8 }}
      {{- end }}
      containers:
      - name: mongodb-mongos
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: IfNotPresent
        command: ['/bin/bash', '-c', '/bin/bash /run.sh']
        livenessProbe:
          exec:
            command:
              - mongo
              - 127.0.0.1:{{ .Values.mongodb_mongos.port }}
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 60
          failureThreshold: 8
          successThreshold: 1
        volumeMounts:
          - name: ro
            mountPath: /etc/localtime:ro
          - name: mongodb-mongos-configmap
            mountPath: /run.sh
            subPath: run.sh
          - name: mongodb-mongos-configmap
            mountPath: /mongodb-mongos/conf/mongos-temp.conf
            subPath: mongos-temp.conf
      volumes:
        - name: ro
          hostPath:
            path: /etc/localtime
        - name: mongodb-mongos-configmap
          configMap:
            name: mongodb-mongos-configmap
