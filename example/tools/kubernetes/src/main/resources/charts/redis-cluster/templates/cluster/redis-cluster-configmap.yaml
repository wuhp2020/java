apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-configmap
data:
  run.sh: |

    #!/bin/bash

    set -x

    sleep 10

    echo "starting redis-cluster ..."
    while true; do
      mastertemp=""
      for((i=0;i<{{ .Values.replicas }};i++)); do
      while true; do
        sleep 1
        echo '1'
        if [ "$(/redis/bin/redis-cli -h "redis-master-statefulset-$i.redis-master-service.default.svc.cluster.local" -p {{.Values.redis_master.port}} ping)" == "PONG" ]; then
          a=$(ping redis-master-statefulset-$i.redis-master-service.default.svc.cluster.local -c 1 | head -1 | awk -F\( '{print $2}' | awk -F\) '{print $1}')
          mastertemp="$mastertemp $a:{{.Values.redis_master.port}} "
          break
        fi
      done
      done

      slavetemp=""
      for((i=0;i<{{ .Values.replicas }};i++)); do
      while true; do
        sleep 1
        echo '2'
        if [ "$(/redis/bin/redis-cli -h "redis-slave-statefulset-$i.redis-slave-service.default.svc.cluster.local" -p {{.Values.redis_slave.port}} ping)" == "PONG" ]; then
          a=$(ping redis-slave-statefulset-$i.redis-slave-service.default.svc.cluster.local -c 1 | head -1 | awk -F\( '{print $2}' | awk -F\) '{print $1}')
          slavetemp="$slavetemp $a:{{.Values.redis_slave.port}} "
          break
        fi
      done
      done

      echo $mastertemp
      echo $slavetemp

      response=$(echo yes | /redis/bin/redis-cli --cluster create $mastertemp $slavetemp --cluster-replicas 1)
      if [[ $? -eq 0 ]]; then
        if [[ $response == *'All 16384 slots covered'* ]]; then
          break
        fi
      else
        if [[ $response == *'Either the node already knows other nodes'* ]]; then
          break
        fi
      fi
    done
    echo "started redis-cluster ..."

