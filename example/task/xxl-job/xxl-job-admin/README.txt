一致性问题

1. 在集群部署时, 多台调度器如何保证任务不会重复调用呢?
并发情况下: 通过mysql悲观锁实现分布式锁（for update语句）;
com.xxl.job.admin.core.thread.JobScheduleHelper#start(): line 70
任务阻塞或调度密集情况下: 结合单机路由策略(如: 第一台、一致性哈希) + 阻塞策略(如: 单机串行、丢弃后续调度)来规避

2. 如何保证任务不会漏呢?
xxl-job 提供了过期处理策略(Timewheel), 大致如下:
过期超5s: 本次忽略, 当前时间开始计算下次触发时间
过期5s内: 立即触发一次, 当前时间开始计算下次触发时间
com.xxl.job.admin.core.thread.JobScheduleHelper#start(): line 83
调度结果丢失处理: 调度记录停留在 “运行中” 状态超过10min, 且对应执行器心跳注册失败不在线, 则将本地调度主动标记失败(宕机的情况)


3. (动态)分片与广播
分片: 将任务拆分, 分发到每个服务器上并发执行, 以此增加执行
以执行器为粒度, 根据执行器ip自然排序编号, 结合任务入参, 在发布任务时即可做到某片执行某些数据
广播: 将完整任务分发每个服务器上(场景: 每个执行节点的缓存更新/执行脚本)
#####################################


